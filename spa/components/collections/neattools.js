/* generated by Svelte v3.38.3 */
import {
	SvelteComponent,
	append,
	attr,
	children,
	claim_element,
	claim_space,
	claim_text,
	detach,
	element,
	init,
	insert,
	noop,
	safe_not_equal,
	set_data,
	space,
	text
} from '../../web_modules/svelte/internal/index.mjs';

function create_fragment(ctx) {
	let main;
	let ul;
	let h4;
	let t0;
	let t1;
	let li0;
	let a0;
	let t2;
	let span0;
	let t3;
	let t4;
	let t5;
	let li1;
	let a1;
	let t6;
	let span1;
	let t7;
	let t8;
	let t9;
	let li2;
	let a2;
	let t10;
	let span2;
	let t11;
	let t12;
	let t13;
	let li3;
	let a3;
	let t14;
	let span3;
	let t15;
	let t16;
	let t17;
	let li4;
	let a4;
	let t18;
	let span4;
	let t19;
	let t20;
	let t21;
	let li5;
	let a5;
	let t22;
	let span5;
	let t23;
	let t24;
	let t25;
	let li6;
	let a6;
	let t26;
	let span6;
	let t27;
	let t28;
	let t29;
	let li7;
	let a7;
	let t30;
	let span7;
	let t31;
	let t32;

	return {
		c() {
			main = element("main");
			ul = element("ul");
			h4 = element("h4");
			t0 = text(/*tagline*/ ctx[0]);
			t1 = space();
			li0 = element("li");
			a0 = element("a");
			t2 = text("https://");
			span0 = element("span");
			t3 = text("carrd");
			t4 = text(".co/");
			t5 = space();
			li1 = element("li");
			a1 = element("a");
			t6 = text("https://");
			span1 = element("span");
			t7 = text("blocsapp");
			t8 = text(".com/");
			t9 = space();
			li2 = element("li");
			a2 = element("a");
			t10 = text("https://");
			span2 = element("span");
			t11 = text("webflow");
			t12 = text(".com/");
			t13 = space();
			li3 = element("li");
			a3 = element("a");
			t14 = text("https://");
			span3 = element("span");
			t15 = text("strapi");
			t16 = text(".io");
			t17 = space();
			li4 = element("li");
			a4 = element("a");
			t18 = text("https://");
			span4 = element("span");
			t19 = text("froont");
			t20 = text(".com/");
			t21 = space();
			li5 = element("li");
			a5 = element("a");
			t22 = text("https://www.");
			span5 = element("span");
			t23 = text("pulsecms");
			t24 = text(".com/");
			t25 = space();
			li6 = element("li");
			a6 = element("a");
			t26 = text("https://www.");
			span6 = element("span");
			t27 = text("contentful");
			t28 = text(".com/");
			t29 = space();
			li7 = element("li");
			a7 = element("a");
			t30 = text("https://go");
			span7 = element("span");
			t31 = text("hugo");
			t32 = text(".io/");
			this.h();
		},
		l(nodes) {
			main = claim_element(nodes, "MAIN", { class: true });
			var main_nodes = children(main);
			ul = claim_element(main_nodes, "UL", { class: true });
			var ul_nodes = children(ul);
			h4 = claim_element(ul_nodes, "H4", { class: true });
			var h4_nodes = children(h4);
			t0 = claim_text(h4_nodes, /*tagline*/ ctx[0]);
			h4_nodes.forEach(detach);
			t1 = claim_space(ul_nodes);
			li0 = claim_element(ul_nodes, "LI", { class: true });
			var li0_nodes = children(li0);
			a0 = claim_element(li0_nodes, "A", { href: true, class: true });
			var a0_nodes = children(a0);
			t2 = claim_text(a0_nodes, "https://");
			span0 = claim_element(a0_nodes, "SPAN", { class: true });
			var span0_nodes = children(span0);
			t3 = claim_text(span0_nodes, "carrd");
			span0_nodes.forEach(detach);
			t4 = claim_text(a0_nodes, ".co/");
			a0_nodes.forEach(detach);
			li0_nodes.forEach(detach);
			t5 = claim_space(ul_nodes);
			li1 = claim_element(ul_nodes, "LI", { class: true });
			var li1_nodes = children(li1);
			a1 = claim_element(li1_nodes, "A", { href: true, class: true });
			var a1_nodes = children(a1);
			t6 = claim_text(a1_nodes, "https://");
			span1 = claim_element(a1_nodes, "SPAN", { class: true });
			var span1_nodes = children(span1);
			t7 = claim_text(span1_nodes, "blocsapp");
			span1_nodes.forEach(detach);
			t8 = claim_text(a1_nodes, ".com/");
			a1_nodes.forEach(detach);
			li1_nodes.forEach(detach);
			t9 = claim_space(ul_nodes);
			li2 = claim_element(ul_nodes, "LI", { class: true });
			var li2_nodes = children(li2);
			a2 = claim_element(li2_nodes, "A", { href: true, class: true });
			var a2_nodes = children(a2);
			t10 = claim_text(a2_nodes, "https://");
			span2 = claim_element(a2_nodes, "SPAN", { class: true });
			var span2_nodes = children(span2);
			t11 = claim_text(span2_nodes, "webflow");
			span2_nodes.forEach(detach);
			t12 = claim_text(a2_nodes, ".com/");
			a2_nodes.forEach(detach);
			li2_nodes.forEach(detach);
			t13 = claim_space(ul_nodes);
			li3 = claim_element(ul_nodes, "LI", { class: true });
			var li3_nodes = children(li3);
			a3 = claim_element(li3_nodes, "A", { href: true, class: true });
			var a3_nodes = children(a3);
			t14 = claim_text(a3_nodes, "https://");
			span3 = claim_element(a3_nodes, "SPAN", { class: true });
			var span3_nodes = children(span3);
			t15 = claim_text(span3_nodes, "strapi");
			span3_nodes.forEach(detach);
			t16 = claim_text(a3_nodes, ".io");
			a3_nodes.forEach(detach);
			li3_nodes.forEach(detach);
			t17 = claim_space(ul_nodes);
			li4 = claim_element(ul_nodes, "LI", { class: true });
			var li4_nodes = children(li4);
			a4 = claim_element(li4_nodes, "A", { href: true, class: true });
			var a4_nodes = children(a4);
			t18 = claim_text(a4_nodes, "https://");
			span4 = claim_element(a4_nodes, "SPAN", { class: true });
			var span4_nodes = children(span4);
			t19 = claim_text(span4_nodes, "froont");
			span4_nodes.forEach(detach);
			t20 = claim_text(a4_nodes, ".com/");
			a4_nodes.forEach(detach);
			li4_nodes.forEach(detach);
			t21 = claim_space(ul_nodes);
			li5 = claim_element(ul_nodes, "LI", { class: true });
			var li5_nodes = children(li5);
			a5 = claim_element(li5_nodes, "A", { href: true, class: true });
			var a5_nodes = children(a5);
			t22 = claim_text(a5_nodes, "https://www.");
			span5 = claim_element(a5_nodes, "SPAN", { class: true });
			var span5_nodes = children(span5);
			t23 = claim_text(span5_nodes, "pulsecms");
			span5_nodes.forEach(detach);
			t24 = claim_text(a5_nodes, ".com/");
			a5_nodes.forEach(detach);
			li5_nodes.forEach(detach);
			t25 = claim_space(ul_nodes);
			li6 = claim_element(ul_nodes, "LI", { class: true });
			var li6_nodes = children(li6);
			a6 = claim_element(li6_nodes, "A", { href: true, class: true });
			var a6_nodes = children(a6);
			t26 = claim_text(a6_nodes, "https://www.");
			span6 = claim_element(a6_nodes, "SPAN", { class: true });
			var span6_nodes = children(span6);
			t27 = claim_text(span6_nodes, "contentful");
			span6_nodes.forEach(detach);
			t28 = claim_text(a6_nodes, ".com/");
			a6_nodes.forEach(detach);
			li6_nodes.forEach(detach);
			t29 = claim_space(ul_nodes);
			li7 = claim_element(ul_nodes, "LI", { class: true });
			var li7_nodes = children(li7);
			a7 = claim_element(li7_nodes, "A", { href: true, class: true });
			var a7_nodes = children(a7);
			t30 = claim_text(a7_nodes, "https://go");
			span7 = claim_element(a7_nodes, "SPAN", { class: true });
			var span7_nodes = children(span7);
			t31 = claim_text(span7_nodes, "hugo");
			span7_nodes.forEach(detach);
			t32 = claim_text(a7_nodes, ".io/");
			a7_nodes.forEach(detach);
			li7_nodes.forEach(detach);
			ul_nodes.forEach(detach);
			main_nodes.forEach(detach);
			this.h();
		},
		h() {
			attr(h4, "class", "svelte-1vv6611");
			attr(span0, "class", "svelte-1vv6611");
			attr(a0, "href", "https://carrd.co/");
			attr(a0, "class", "svelte-1vv6611");
			attr(li0, "class", "svelte-1vv6611");
			attr(span1, "class", "svelte-1vv6611");
			attr(a1, "href", "https://blocsapp.com/");
			attr(a1, "class", "svelte-1vv6611");
			attr(li1, "class", "svelte-1vv6611");
			attr(span2, "class", "svelte-1vv6611");
			attr(a2, "href", "https://webflow.com/");
			attr(a2, "class", "svelte-1vv6611");
			attr(li2, "class", "svelte-1vv6611");
			attr(span3, "class", "svelte-1vv6611");
			attr(a3, "href", "https://strapi.io");
			attr(a3, "class", "svelte-1vv6611");
			attr(li3, "class", "svelte-1vv6611");
			attr(span4, "class", "svelte-1vv6611");
			attr(a4, "href", "https://froont.com/");
			attr(a4, "class", "svelte-1vv6611");
			attr(li4, "class", "svelte-1vv6611");
			attr(span5, "class", "svelte-1vv6611");
			attr(a5, "href", "https://www.pulsecms.com/");
			attr(a5, "class", "svelte-1vv6611");
			attr(li5, "class", "svelte-1vv6611");
			attr(span6, "class", "svelte-1vv6611");
			attr(a6, "href", "https://www.contentful.com/");
			attr(a6, "class", "svelte-1vv6611");
			attr(li6, "class", "svelte-1vv6611");
			attr(span7, "class", "svelte-1vv6611");
			attr(a7, "href", "https://gohugo.io/");
			attr(a7, "class", "svelte-1vv6611");
			attr(li7, "class", "svelte-1vv6611");
			attr(ul, "class", "svelte-1vv6611");
			attr(main, "class", " svelte-1vv6611");
		},
		m(target, anchor) {
			insert(target, main, anchor);
			append(main, ul);
			append(ul, h4);
			append(h4, t0);
			append(ul, t1);
			append(ul, li0);
			append(li0, a0);
			append(a0, t2);
			append(a0, span0);
			append(span0, t3);
			append(a0, t4);
			append(ul, t5);
			append(ul, li1);
			append(li1, a1);
			append(a1, t6);
			append(a1, span1);
			append(span1, t7);
			append(a1, t8);
			append(ul, t9);
			append(ul, li2);
			append(li2, a2);
			append(a2, t10);
			append(a2, span2);
			append(span2, t11);
			append(a2, t12);
			append(ul, t13);
			append(ul, li3);
			append(li3, a3);
			append(a3, t14);
			append(a3, span3);
			append(span3, t15);
			append(a3, t16);
			append(ul, t17);
			append(ul, li4);
			append(li4, a4);
			append(a4, t18);
			append(a4, span4);
			append(span4, t19);
			append(a4, t20);
			append(ul, t21);
			append(ul, li5);
			append(li5, a5);
			append(a5, t22);
			append(a5, span5);
			append(span5, t23);
			append(a5, t24);
			append(ul, t25);
			append(ul, li6);
			append(li6, a6);
			append(a6, t26);
			append(a6, span6);
			append(span6, t27);
			append(a6, t28);
			append(ul, t29);
			append(ul, li7);
			append(li7, a7);
			append(a7, t30);
			append(a7, span7);
			append(span7, t31);
			append(a7, t32);
		},
		p(ctx, [dirty]) {
			if (dirty & /*tagline*/ 1) set_data(t0, /*tagline*/ ctx[0]);
		},
		i: noop,
		o: noop,
		d(detaching) {
			if (detaching) detach(main);
		}
	};
}

function instance($$self, $$props, $$invalidate) {
	let { title } = $$props, { tagline } = $$props;

	$$self.$$set = $$props => {
		if ("title" in $$props) $$invalidate(1, title = $$props.title);
		if ("tagline" in $$props) $$invalidate(0, tagline = $$props.tagline);
	};

	return [tagline, title];
}

class Component extends SvelteComponent {
	constructor(options) {
		super();
		init(this, options, instance, create_fragment, safe_not_equal, { title: 1, tagline: 0 });
	}
}

export default Component;