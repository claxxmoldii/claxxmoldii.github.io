/* generated by Svelte v3.38.3 */
import {
	SvelteComponent,
	append,
	attr,
	children,
	claim_element,
	claim_space,
	claim_text,
	detach,
	element,
	init,
	insert,
	noop,
	safe_not_equal,
	space,
	text
} from '../../web_modules/svelte/internal/index.mjs';

function create_fragment(ctx) {
	let div6;
	let span0;
	let t0;
	let t1;
	let div5;
	let div0;
	let t2;
	let div3;
	let div2;
	let div1;
	let t3;
	let div4;
	let t4;
	let span1;
	let t5;

	return {
		c() {
			div6 = element("div");
			span0 = element("span");
			t0 = text("<");
			t1 = space();
			div5 = element("div");
			div0 = element("div");
			t2 = space();
			div3 = element("div");
			div2 = element("div");
			div1 = element("div");
			t3 = space();
			div4 = element("div");
			t4 = space();
			span1 = element("span");
			t5 = text(">");
			this.h();
		},
		l(nodes) {
			div6 = claim_element(nodes, "DIV", { class: true });
			var div6_nodes = children(div6);
			span0 = claim_element(div6_nodes, "SPAN", { class: true });
			var span0_nodes = children(span0);
			t0 = claim_text(span0_nodes, "<");
			span0_nodes.forEach(detach);
			t1 = claim_space(div6_nodes);
			div5 = claim_element(div6_nodes, "DIV", { class: true });
			var div5_nodes = children(div5);
			div0 = claim_element(div5_nodes, "DIV", { class: true });
			children(div0).forEach(detach);
			t2 = claim_space(div5_nodes);
			div3 = claim_element(div5_nodes, "DIV", { class: true });
			var div3_nodes = children(div3);
			div2 = claim_element(div3_nodes, "DIV", { class: true });
			var div2_nodes = children(div2);
			div1 = claim_element(div2_nodes, "DIV", { class: true });
			children(div1).forEach(detach);
			div2_nodes.forEach(detach);
			div3_nodes.forEach(detach);
			t3 = claim_space(div5_nodes);
			div4 = claim_element(div5_nodes, "DIV", { class: true });
			children(div4).forEach(detach);
			div5_nodes.forEach(detach);
			t4 = claim_space(div6_nodes);
			span1 = claim_element(div6_nodes, "SPAN", { class: true });
			var span1_nodes = children(span1);
			t5 = claim_text(span1_nodes, ">");
			span1_nodes.forEach(detach);
			div6_nodes.forEach(detach);
			this.h();
		},
		h() {
			attr(span0, "class", "btn btn--prev biggie svelte-10mofqf");
			attr(div0, "class", "little-dot  little-dot--first svelte-10mofqf");
			attr(div1, "class", "big-dot svelte-10mofqf");
			attr(div2, "class", "big-dot-container svelte-10mofqf");
			attr(div3, "class", "little-dot svelte-10mofqf");
			attr(div4, "class", "little-dot  little-dot--last svelte-10mofqf");
			attr(div5, "class", "pagination-container");
			attr(span1, "class", "btn btn--next biggie svelte-10mofqf");
			attr(div6, "class", "");
		},
		m(target, anchor) {
			insert(target, div6, anchor);
			append(div6, span0);
			append(span0, t0);
			append(div6, t1);
			append(div6, div5);
			append(div5, div0);
			append(div5, t2);
			append(div5, div3);
			append(div3, div2);
			append(div2, div1);
			append(div5, t3);
			append(div5, div4);
			append(div6, t4);
			append(div6, span1);
			append(span1, t5);
		},
		p: noop,
		i: noop,
		o: noop,
		d(detaching) {
			if (detaching) detach(div6);
		}
	};
}

class Component extends SvelteComponent {
	constructor(options) {
		super();
		init(this, options, null, create_fragment, safe_not_equal, {});
	}
}

export default Component;