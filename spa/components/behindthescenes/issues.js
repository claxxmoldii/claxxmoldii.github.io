/* generated by Svelte v3.38.3 */
import {
	SvelteComponent,
	append,
	attr,
	children,
	claim_element,
	claim_space,
	claim_text,
	detach,
	element,
	init,
	insert,
	noop,
	safe_not_equal,
	space,
	text
} from '../../web_modules/svelte/internal/index.mjs';

function create_fragment(ctx) {
	let ul;
	let li0;
	let t0;
	let span0;
	let t1;
	let t2;
	let br0;
	let t3;
	let li1;
	let t4;
	let span1;
	let t5;
	let t6;
	let br1;
	let t7;
	let li2;
	let t8;
	let span2;
	let t9;
	let t10;
	let br2;
	let t11;
	let li3;
	let t12;
	let t13;
	let li4;
	let t14;
	let t15;
	let li5;
	let t16;

	return {
		c() {
			ul = element("ul");
			li0 = element("li");
			t0 = text("navigation.svelte is based on svelte class directive 'https://svelte.dev/tutorial/classes'. it's wonky here. [collections] and [about] links have to be double-clicked for css to take effect. links are working though. [home] and [posts] are okay.\n      resolved. svelte prop passing. ");
			span0 = element("span");
			t1 = text("/2021.04.17");
			t2 = space();
			br0 = element("br");
			t3 = space();
			li1 = element("li");
			t4 = text("links... have to be refreshed. i'm not sure what's going on here but after watcing jantcu/plenti bigspring: part 18 video, tried turning off javascript, and funky stuff went away. tried running public folder on npm-http-server, links need refreshing. turned off js, funky stuff went away. using FF. tried it on brave, same thing... ");
			span1 = element("span");
			t5 = text("/2021.04.17");
			t6 = space();
			br1 = element("br");
			t7 = space();
			li2 = element("li");
			t8 = text("links-refreshing... may have something to do with svelte: component allLayout prop... not yet done with the detective work... ");
			span2 = element("span");
			t9 = text("/2021.04.21");
			t10 = space();
			br2 = element("br");
			t11 = space();
			li3 = element("li");
			t12 = text("do not fight the tool... nav is okay as it is, use it. nav is working okay now.");
			t13 = space();
			li4 = element("li");
			t14 = text("since rebuild from plenti v.0.4.24, tagline function is working again... huh...\n      yey!");
			t15 = space();
			li5 = element("li");
			t16 = text("checking... teshting...");
			this.h();
		},
		l(nodes) {
			ul = claim_element(nodes, "UL", { class: true });
			var ul_nodes = children(ul);
			li0 = claim_element(ul_nodes, "LI", { class: true });
			var li0_nodes = children(li0);
			t0 = claim_text(li0_nodes, "navigation.svelte is based on svelte class directive 'https://svelte.dev/tutorial/classes'. it's wonky here. [collections] and [about] links have to be double-clicked for css to take effect. links are working though. [home] and [posts] are okay.\n      resolved. svelte prop passing. ");
			span0 = claim_element(li0_nodes, "SPAN", { class: true });
			var span0_nodes = children(span0);
			t1 = claim_text(span0_nodes, "/2021.04.17");
			span0_nodes.forEach(detach);
			t2 = claim_space(li0_nodes);
			li0_nodes.forEach(detach);
			br0 = claim_element(ul_nodes, "BR", {});
			t3 = claim_space(ul_nodes);
			li1 = claim_element(ul_nodes, "LI", { class: true });
			var li1_nodes = children(li1);
			t4 = claim_text(li1_nodes, "links... have to be refreshed. i'm not sure what's going on here but after watcing jantcu/plenti bigspring: part 18 video, tried turning off javascript, and funky stuff went away. tried running public folder on npm-http-server, links need refreshing. turned off js, funky stuff went away. using FF. tried it on brave, same thing... ");
			span1 = claim_element(li1_nodes, "SPAN", { class: true });
			var span1_nodes = children(span1);
			t5 = claim_text(span1_nodes, "/2021.04.17");
			span1_nodes.forEach(detach);
			t6 = claim_space(li1_nodes);
			li1_nodes.forEach(detach);
			br1 = claim_element(ul_nodes, "BR", {});
			t7 = claim_space(ul_nodes);
			li2 = claim_element(ul_nodes, "LI", { class: true });
			var li2_nodes = children(li2);
			t8 = claim_text(li2_nodes, "links-refreshing... may have something to do with svelte: component allLayout prop... not yet done with the detective work... ");
			span2 = claim_element(li2_nodes, "SPAN", { class: true });
			var span2_nodes = children(span2);
			t9 = claim_text(span2_nodes, "/2021.04.21");
			span2_nodes.forEach(detach);
			t10 = claim_space(li2_nodes);
			li2_nodes.forEach(detach);
			br2 = claim_element(ul_nodes, "BR", {});
			t11 = claim_space(ul_nodes);
			li3 = claim_element(ul_nodes, "LI", { class: true });
			var li3_nodes = children(li3);
			t12 = claim_text(li3_nodes, "do not fight the tool... nav is okay as it is, use it. nav is working okay now.");
			li3_nodes.forEach(detach);
			t13 = claim_space(ul_nodes);
			li4 = claim_element(ul_nodes, "LI", { class: true });
			var li4_nodes = children(li4);
			t14 = claim_text(li4_nodes, "since rebuild from plenti v.0.4.24, tagline function is working again... huh...\n      yey!");
			li4_nodes.forEach(detach);
			t15 = claim_space(ul_nodes);
			li5 = claim_element(ul_nodes, "LI", { class: true });
			var li5_nodes = children(li5);
			t16 = claim_text(li5_nodes, "checking... teshting...");
			li5_nodes.forEach(detach);
			ul_nodes.forEach(detach);
			this.h();
		},
		h() {
			attr(span0, "class", "date svelte-15rhbiz");
			attr(li0, "class", "svelte-15rhbiz");
			attr(span1, "class", "date svelte-15rhbiz");
			attr(li1, "class", "svelte-15rhbiz");
			attr(span2, "class", "date svelte-15rhbiz");
			attr(li2, "class", "svelte-15rhbiz");
			attr(li3, "class", "svelte-15rhbiz");
			attr(li4, "class", "svelte-15rhbiz");
			attr(li5, "class", "svelte-15rhbiz");
			attr(ul, "class", "svelte-15rhbiz");
		},
		m(target, anchor) {
			insert(target, ul, anchor);
			append(ul, li0);
			append(li0, t0);
			append(li0, span0);
			append(span0, t1);
			append(li0, t2);
			append(ul, br0);
			append(ul, t3);
			append(ul, li1);
			append(li1, t4);
			append(li1, span1);
			append(span1, t5);
			append(li1, t6);
			append(ul, br1);
			append(ul, t7);
			append(ul, li2);
			append(li2, t8);
			append(li2, span2);
			append(span2, t9);
			append(li2, t10);
			append(ul, br2);
			append(ul, t11);
			append(ul, li3);
			append(li3, t12);
			append(ul, t13);
			append(ul, li4);
			append(li4, t14);
			append(ul, t15);
			append(ul, li5);
			append(li5, t16);
		},
		p: noop,
		i: noop,
		o: noop,
		d(detaching) {
			if (detaching) detach(ul);
		}
	};
}

class Component extends SvelteComponent {
	constructor(options) {
		super();
		init(this, options, null, create_fragment, safe_not_equal, {});
	}
}

export default Component;